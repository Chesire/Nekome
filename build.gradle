import io.gitlab.arturbosch.detekt.Detekt

plugins {
    alias(libs.plugins.detekt)
    alias(libs.plugins.kover)
    alias(libs.plugins.ktlint)

    alias(libs.plugins.aboutlibraries) apply false
    alias(libs.plugins.android.application) apply false
    alias(libs.plugins.android.library) apply false
    alias(libs.plugins.androidx.navigation.safeargs) apply false
    alias(libs.plugins.google.dagger.hilt.android) apply false
    alias(libs.plugins.google.devtools.ksp) apply false
    alias(libs.plugins.kotlin.android) apply false
}

subprojects {
    apply plugin: "org.jetbrains.kotlinx.kover"
    apply plugin: "org.jlleitschuh.gradle.ktlint"

    ktlint {
        verbose = true
        android = true
        outputToConsole = true
        disabledRules = ["max-line-length"]

        reporters {
            reporter "plain"
        }
    }
    afterEvaluate {
        if (getPlugins().hasPlugin("android") || getPlugins().hasPlugin("android-library")) {
            configure(android) {
                compileOptions {
                    sourceCompatibility = java_version
                    targetCompatibility = java_version
                }
                kotlin {
                    jvmToolchain(java_version.majorVersion.toInteger())
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task detektCheck(type: Detekt) {
    parallel = true
    source = files(projectDir)
    include "**/*.kt"
    include "**/*.kts"
    exclude "**/resources/**"
    exclude "**/build/**"
    config.setFrom(files("$rootDir/config/detekt/detekt.yml"))
    buildUponDefaultConfig = false
}

koverMerged {
    enable()

    filters {
        classes {
            excludes.addAll(
                "*.databinding.*", // Autogen ViewBinding
                "dagger.*", // Autogen Dagger code
                "hilt_*", // Autogen Hilt code
                "*BuildConfig", // Autogen Build file
                "*ComposableSingletons\$*", // Autogen Compose code
                "*JsonAdapter", // Autogen Moshi code
                "*Directions\$*", // Autogen Navigation
                "*_AssistedFactory_Impl", // Autogen Dagger code
                "*_Factory", // Autogen Dagger code
                "*_Factory\$*", // Autogen Dagger code
                "*_HiltModules*", // Autogen Dagger code
                "*_MembersInjector", // Autogen Dagger code

                "*Activity", // Activities
                "*Activity\$*", // Activities
                "*Fragment", // Fragments
                "*Fragment\$*", // Fragments
                "*ScreenKt*", // Compose screens
                "*ScreenKt*\$*", // Compose screens
                "com.chesire.nekome.injection.*" // Dagger injection code
            )
        }
        annotations {
            excludes.addAll(
                "androidx.compose.runtime.Composable" // Compose components
            )
        }
        projects {
            excludes.addAll(
                ":core:compose", // View code
                ":testing" // Testing code
            )
        }
    }
}

dependencies {
    detektPlugins(libs.detekt.compose)
    detektPlugins(libs.detekt.formatting)
    detektPlugins(libs.detekt.kotlin.compiler)
}

ext {
    java_version = JavaVersion.VERSION_11
}
